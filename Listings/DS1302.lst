C51 COMPILER V9.60.7.0   DS1302                                                            01/20/2024 12:38:15 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE DS1302.c LARGE ROM(COMPACT) WARNINGLEVEL(0) OPTIMIZE(9,SIZE) 
                    -BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include "DS1302.h"
   2          
   3          //void DS1302_delay(uchar dd)
   4          //{
   5          //    uchar i;
   6          //    for(;dd>0;dd--)
   7          //  for(i=110;i>0;i--);
   8          //}
   9          //void DS1302_init(uchar *time)
  10          //{
  11          //    DS1302_delay(2);
  12          //  RST=0;      //RST脚置低
  13          //  SCK=0;      //SCK脚置低
  14          //    ds1302_write_byte(0x8e,0x00);
  15          //    if(ds1302_read_byte(0X81)&0X80)
  16          //    {
  17          //        DS1302_SetTime(time);
  18          //    }
  19          
  20          //}
  21          //DS1302初始化函数
  22          void ds1302_init(void) 
  23          {
  24   1        RST=0;      //RST脚置低
  25   1        SCK=0;      //SCK脚置低
  26   1      }
  27          //向DS1302写入一字节数据
  28          void ds1302_write_byte(uchar addr, uchar d) 
  29          {
  30   1        uchar i;
  31   1        RST=1;          //启动DS1302总线  
  32   1        //写入目标地址：addr
  33   1        addr = addr & 0xFE;   //最低位置零，寄存器0位为0时写，为1时读
  34   1        for (i = 0; i < 8; i ++) {
  35   2          if (addr & 0x01) {
  36   3            IO=1;
  37   3            }
  38   2          else {
  39   3            IO=0;
  40   3            }
  41   2          SCK=1;      //产生时钟
  42   2          SCK=0;
  43   2          addr = addr >> 1;
  44   2          } 
  45   1        //写入数据：d
  46   1        for (i = 0; i < 8; i ++) {
  47   2          if (d & 0x01) {
  48   3            IO=1;
  49   3            }
  50   2          else {
  51   3            IO=0;
  52   3            }
  53   2          SCK=1;    //产生时钟
  54   2          SCK=0;
C51 COMPILER V9.60.7.0   DS1302                                                            01/20/2024 12:38:15 PAGE 2   

  55   2          d = d >> 1;
  56   2          }
  57   1        RST=0;    //停止DS1302总线
  58   1      }
  59          
  60          //从DS1302读出一字节数据
  61          uchar ds1302_read_byte(uchar addr) {
  62   1      
  63   1        uchar i,temp,mm,nn,value; 
  64   1        RST=1;          //启动DS1302总线
  65   1        //写入目标地址：addr
  66   1        addr = addr | 0x01;    //最低位置高，寄存器0位为0时写，为1时读
  67   1        for (i = 0; i < 8; i ++) {
  68   2          if (addr & 0x01) {
  69   3            IO=1;
  70   3            }
  71   2          else {
  72   3            IO=0;
  73   3            }
  74   2          SCK=1;
  75   2          SCK=0;
  76   2          addr = addr >> 1;
  77   2          } 
  78   1        //输出数据：temp
  79   1        for (i = 0; i < 8; i ++) {
  80   2          temp = temp >> 1;
  81   2          if (IO) {
  82   3            temp |= 0x80;
  83   3            }
  84   2          else {
  85   3            temp &= 0x7F;
  86   3            }
  87   2          SCK=1;
  88   2          SCK=0;
  89   2          } 
  90   1        RST=0;          //停止DS1302总线
  91   1      mm=temp/16;
  92   1      nn=temp%16;
  93   1      value=mm*10+nn;
  94   1      return value;
  95   1      }
  96          
  97          void DS1302_SetTime(uchar *ad)
  98          {
  99   1        ds1302_write_byte(0x8e,0x00);   //WP=0 允许数据写入DS1302
 100   1      /**********以下对时分秒的初始化*************/
 101   1          ds1302_write_byte(ds1302_sec_addr,ad[5]/10*16+ad[5]%10);  //秒
 102   1          ds1302_write_byte(ds1302_min_addr,ad[4]/10*16+ad[4]%10);   //分
 103   1          ds1302_write_byte(ds1302_hour_addr,ad[3]/10*16+ad[3]%10);   //时
 104   1      /**********以下对年月日的初始化*************/
 105   1          ds1302_write_byte(ds1302_day_addr,ad[2]/10*16+ad[2]%10);
 106   1        ds1302_write_byte(ds1302_month_addr,ad[1]/10*16+ad[1]%10);
 107   1        ds1302_write_byte(ds1302_year_addr,ad[0]/10*16+ad[0]%10);
 108   1        ds1302_write_byte(0x8e,0x80);   //0x8e控制字节地址,bit7=WP WP=1 禁止数据写入DS1302
 109   1        }
 110          //从DS302读出时钟数据
 111          void DS1302_Readtime(void)//
 112          {
 113   1            time_data[0]=ds1302_read_byte( 0x8D);
 114   1            time_data[1]=ds1302_read_byte( 0x89);
 115   1            time_data[2]=ds1302_read_byte( 0x87);
 116   1            time_data[3]=ds1302_read_byte( 0x85);
C51 COMPILER V9.60.7.0   DS1302                                                            01/20/2024 12:38:15 PAGE 3   

 117   1            time_data[4]=ds1302_read_byte( 0x83);
 118   1            time_data[5]=ds1302_read_byte( 0x81);
 119   1      }
 120          /*****************************************
 121           * ???: void DS1302_OFF(void)
 122           * ??  :DS1302??????
 123           *  ??  :
 124           * ??  :
 125           * ??  :
 126           *************************************/
 127          //  void DS1302_OFF(void)
 128          //  {
 129          //   uchar temp;
 130          //   temp=ds1302_read_byte(0x81);//???????
 131          //   ds1302_write_byte(0x8e,0x00);//WP=0 ??????DS1302
 132          //   temp=temp|(1<<7);
 133          //   ds1302_write_byte(0x80,temp);//WP=1 ??????DS1302
 134          
 135          //  }
 136          ///*****************************************
 137          // * ???: void DS1302_ON(void)
 138          // * ??  :DS1302??????,??
 139          // *  ??  :
 140          // * ??  :
 141          // * ??  :
 142          // *************************************/
 143          //  void DS1302_ON(void)
 144          //  {
 145          //   uchar temp;
 146          //   temp=ds1302_read_byte(0x81);
 147          //   ds1302_write_byte(0x8e,0x00);//WP=0 ??????DS1302
 148          //   temp=temp|(0<<7);
 149          //   ds1302_write_byte(0x80,temp);//WP=0 ??????DS1302
 150          
 151          //  }
 152          
 153          
 154          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
